spring.jpa.hibernate.ddl-auto = criar
spring.datasource.url = postgres: // bmfwsrzqryspei: 4d80b6ec28f0e870f59e46575db9b764e370eb72b47e9781659a28b309887017@ec2-23-23-195-205.compute-1.amazonaws.com: 5432 / dfa8nj8pr87t9b
# Comandos SQL
spring.jpa.properties.hibernate.show_sql = false
spring.jpa.properties.hibernate.use_sql_comments = true
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.type = info

# Formato de dados em JSON
spring.jackson.serialization.write-dates-as-timestamps = false
spring.jackson.date-format = dd / mm / aaaa hh: mm


# # MULTIPART (MultipartProperties)
# Ativar uploads em várias partes
spring.servlet.multipart.enabled = true
# Limiar após o qual os arquivos são gravados no disco.
spring.servlet.multipart.file-size-threshold = 2 KB
# Tamanho máximo do arquivo.
spring.servlet.multipart.max-file-size = 20MB
# Tamanho máximo da solicitação
spring.servlet.multipart.max-request-size = 20MB
# # Propriedades de armazenamento de arquivos
# Todos os arquivos enviados por meio da API REST serão armazenados nesse diretório
file.upload-dir = ./uploadarquivos


spring.jpa.show-sql = true
logging.level.org.hibernate.SQL = DEBUG
